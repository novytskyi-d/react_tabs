{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","React","memo","selectedTabId","tabs","onTabSelected","selectedTab","find","tab","id","className","map","active","cn","href","onClick","selectTab","title","content","firstTab","App","useState","setSelectedTab","useCallback","ReactDOM","render","document","getElementById"],"mappings":"2NAUaA,EAAwBC,IAAMC,MAAK,YAIzC,IAHLC,EAGI,EAHJA,cACAC,EAEI,EAFJA,KACAC,EACI,EADJA,cAEMC,EAAcF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAON,MAAkBC,EAAK,GAQvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAH,GACR,IAAMI,EAASJ,EAAIC,KAAOH,EAAYG,GAEtC,OACE,oBAEEC,UAAWG,IAAG,CAAE,YAAaD,IAC7B,UAAQ,MAHV,SAKE,mBACEE,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,kBAtBP,SAACP,GACbA,EAAIC,KAAOH,EAAYG,IACzBJ,EAAcG,GAoBaQ,CAAUR,IAH3B,SAKGA,EAAIS,SATFT,EAAIC,WAiBnB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYY,gBC3CRd,EAAO,CAClB,CAAEK,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAGpCC,EAA4Bf,EAAK,GAE1BgB,EAAgB,WAC3B,MAAsCC,mBAASF,GAA/C,mBAAOb,EAAP,KAAoBgB,EAApB,KAEMN,EAAYO,uBAAY,SAACf,GAC7Bc,EAAed,KACd,IAEH,OACE,sBAAKE,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAYW,SAGlC,cAACjB,EAAD,CACEI,KAAMA,EACND,cAAeG,EAAYG,GAC3BJ,cAAeW,QC5BvBQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.eba23602.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = React.memo(({\n  selectedTabId,\n  tabs,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const selectTab = (tab: Tab) => {\n    if (tab.id !== selectedTab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const active = tab.id === selectedTab.id;\n\n            return (\n              <li\n                key={tab.id}\n                className={cn({ 'is-active': active })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => selectTab(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n});\n","import React, { useState, useCallback } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './types/Tab';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst firstTab: Tab | undefined = tabs[0];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(firstTab);\n\n  const selectTab = useCallback((tab: Tab) => {\n    setSelectedTab(tab);\n  }, []);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={selectTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}